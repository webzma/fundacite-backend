generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
}

model Student {
  id             BigInt  @id @default(autoincrement())
  name           String
  lastname       String
  email          String  @unique
  phoneNumber    String?
  enrollmentDate DateTime
  enrollments    Enrollment[]
}

model Activity {
  id           BigInt    @id @default(autoincrement())
  name         String
  type         ActivityType
  description  String?
  startDate    DateTime
  endDate      DateTime
  instructor   Instructor? @relation(fields: [instructorId], references: [id])
  instructorId BigInt?
  duration     Int?       // Assuming duration is stored as an integer representing minutes
  status       ActivityStatus @default(PLANNED)
  enrollments  Enrollment[]
}

enum ActivityType {
  TALLER
  CURSO
  CHARLA
}

enum ActivityStatus {
  PLANNED
  ONGOING
  COMPLETED
  CANCELLED
}

enum UserRole {
  COORDINADOR
  ANALISTA
  DIRECTOR_GENERAL
}

model Instructor {
  id        BigInt  @id @default(autoincrement())
  name      String
  email     String  @unique
  expertise String?
  activities Activity[]
}


model Enrollment {
  id             BigInt  @id @default(autoincrement())
  student        Student @relation(fields: [studentId], references: [id])
  studentId      BigInt
  activity       Activity @relation(fields: [activityId], references: [id])
  activityId     BigInt
  enrollmentDate DateTime @default(now())
}
