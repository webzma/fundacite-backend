generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
}

model Student {
  id             BigInt       @id @default(autoincrement())
  name           String
  lastname       String
  email          String       @unique
  phoneNumber    String?
  enrollmentDate DateTime
  enrollments    Enrollment[]
}

model Activity {
  id           BigInt         @id @default(autoincrement())
  name         String
  type         ActivityType
  description  String?
  startDate    DateTime
  endDate      DateTime
  instructorId BigInt?
  duration     Int?
  status       ActivityStatus @default(INACTIVE)
  instructor   Instructor?    @relation(fields: [instructorId], references: [id])
  enrollments  Enrollment[]
}

model Instructor {
  id         BigInt     @id @default(autoincrement())
  name       String
  email      String     @unique
  expertise  String?
  activities Activity[]
}

model Enrollment {
  id             BigInt   @id @default(autoincrement())
  studentId      BigInt
  activityId     BigInt
  enrollmentDate DateTime @default(now())
  activity       Activity @relation(fields: [activityId], references: [id])
  student        Student  @relation(fields: [studentId], references: [id])
}

model Municipality {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  parishes Parish[]
}

model Parish {
  id             Int          @id @default(autoincrement())
  name           String
  municipalityId Int
  municipality   Municipality @relation(fields: [municipalityId], references: [id])

  @@unique([name, municipalityId])
}

enum ActivityType {
  TALLER
  CURSO
  CHARLA
}

enum ActivityStatus {
  ACTIVE
  INACTIVE
  CANCELLED
}

enum UserRole {
  COORDINADOR
  ANALISTA
  DIRECTOR_GENERAL
}
